# name: Deploy Nuxt3 App to GitHub Pages by branch

# on:
#   push:
#     branches:
#       - main # 根据实际的主分支名称修改

# permissions:
#   contents: write

# jobs:
#   deploy:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout Repository
#         uses: actions/checkout@v4

#       - name: Setup Node.js
#         uses: actions/setup-node@v4
#         with:
#           node-version: '20' # 使用适合的 Node.js 版本

#       - name: Enable pnpm
#         run: corepack enable

#       - name: Install Dependencies
#         run: pnpm install # 或 yarn install，根据你的偏好选择

#       - name: Generate Static Site
#         run: pnpm generate # 或者其他生成静态站点的命令，具体取决于你的 Nuxt.js 配置

#       - name: Deploy to GitHub Pages
#         uses: JamesIves/github-pages-deploy-action@v4
#         with:
#           folder: .output/public # 修改为 Nuxt.js 生成的静态文件夹名称
# 以上的配置，最后会将打包产物放到一个gh-pages分支上，对应的，需要git pages设置从这个分支根目录进行部署


# 以下是 github pages 采用从github action 进行更新部署
#
name: Deploy Nuxt3 App site to Pages by action

on:
  # 在针对 `main` 分支的推送上运行。如果你
  # 使用 `master` 分支作为默认分支，请将其更改为 `master`
  push:
    branches: [main]

  # 允许你从 Actions 选项卡手动运行此工作流程
  workflow_dispatch:

# 设置 GITHUB_TOKEN 的权限，以允许部署到 GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# 只允许同时进行一次部署，跳过正在运行和最新队列之间的运行队列
# 但是，不要取消正在进行的运行，因为我们希望允许这些生产部署完成
concurrency:
  group: pages
  cancel-in-progress: false

jobs:
  # 构建工作
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20' # 使用适合的 Node.js 版本

      - name: Enable pnpm
        run: corepack enable

      - name: Install Dependencies
        run: pnpm install # 或 yarn install，根据你的偏好选择

      - name: Generate Static Site
        run: pnpm generate # 或者其他生成静态站点的命令，具体取决于你的 Nuxt.js 配置 # 或 pnpm docs:build / yarn docs:build / bun run docs:build

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: .output/public

  # 部署工作
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    needs: build
    runs-on: ubuntu-latest
    name: Deploy
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
